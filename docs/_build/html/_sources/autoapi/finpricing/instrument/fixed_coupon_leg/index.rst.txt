:py:mod:`finpricing.instrument.fixed_coupon_leg`
================================================

.. py:module:: finpricing.instrument.fixed_coupon_leg


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   finpricing.instrument.fixed_coupon_leg.FixedCouponLegBase
   finpricing.instrument.fixed_coupon_leg.FixedCouponLeg




.. py:class:: FixedCouponLegBase(coupon_rate: float, payment_dates: List, accrual_start: List, accrual_end: List, notional: float = Literal.ONE_HUNDRED.value, day_count_type: finpricing.utils.DayCountTypes = DayCountTypes.THIRTY_360)


   .. py:property:: cashflows
      :type: list


   .. py:method:: generate_cashflows() -> None

      Generate the cashflows for the fixed coupon leg


   .. py:method:: print_cashflows()



.. py:class:: FixedCouponLeg(start_date: Union[finpricing.utils.Date, datetime.date], maturity_date_or_tenor: Union[finpricing.utils.Date, datetime.date, str], coupon_rate: float, notional: float = Literal.ONE_HUNDRED.value, freq_type: finpricing.utils.FrequencyTypes = FrequencyTypes.SEMI_ANNUAL, day_count_type: finpricing.utils.DayCountTypes = DayCountTypes.THIRTY_360, calendar_type: finpricing.utils.CalendarTypes = CalendarTypes.WEEKEND, bus_day_adj_type: finpricing.utils.BusDayAdjustTypes = BusDayAdjustTypes.NONE, date_gen_rule_type: finpricing.utils.DateGenRuleTypes = DateGenRuleTypes.BACKWARD)


   Bases: :py:obj:`finpricing.utils.ClassUtil`, :py:obj:`FixedCouponLegBase`

   .. py:method:: from_cashflows(coupon_rate: float, payment_dates: List, accrual_start: List, accrual_end: List, notional: float = Literal.ONE_HUNDRED.value, day_count_type: finpricing.utils.DayCountTypes = DayCountTypes.THIRTY_360) -> FixedCouponLegBase
      :classmethod:



